`timescale 1ns/1ns

module multiplier_tb;
reg [3:0] A_tb, B_tb;
wire [7:0] Z_tb;

multiplier UUT(A_tb, B_tb, Z_tb);

initial
begin
    #10 A_tb[3:0] = 4'b0000; B_tb[3:0] = 4'b0001;
    #10 A_tb[3:0] = 4'b0001; B_tb[3:0] = 4'b0011;
    #10 A_tb[3:0] = 4'b0011; B_tb[3:0] = 4'b0101;
    #10 A_tb[3:0] = 4'b0101; B_tb[3:0] = 4'b0111;
    #10 A_tb[3:0] = 4'b0111; B_tb[3:0] = 4'b0111;
    #10 A_tb[3:0] = 4'b1011; B_tb[3:0] = 4'b1101;
    #10 A_tb[3:0] = 4'b1101; B_tb[3:0] = 4'b1101;
    #10 A_tb[3:0] = 4'b0011; B_tb[3:0] = 4'b0011;
    #10 A_tb[3:0] = 4'b0001; B_tb[3:0] = 4'b0001;
    #10 A_tb[3:0] = 4'b1001; B_tb[3:0] = 4'b1010;
    #10 A_tb[3:0] = 4'b1111; B_tb[3:0] = 4'b1111;
    #20 $finish;
end

endmodule
